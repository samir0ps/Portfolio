/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const SkillsTypeLazyImport = createFileRoute('/skills/type')()
const SkillsTailwindLazyImport = createFileRoute('/skills/tailwind')()
const SkillsSvelteLazyImport = createFileRoute('/skills/svelte')()
const SkillsReactLazyImport = createFileRoute('/skills/react')()
const SkillsNodeLazyImport = createFileRoute('/skills/node')()
const SkillsNextLazyImport = createFileRoute('/skills/next')()
const SkillsJsLazyImport = createFileRoute('/skills/js')()
const SkillsHtmlLazyImport = createFileRoute('/skills/html')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const SkillsTypeLazyRoute = SkillsTypeLazyImport.update({
  path: '/skills/type',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/skills/type.lazy').then((d) => d.Route))

const SkillsTailwindLazyRoute = SkillsTailwindLazyImport.update({
  path: '/skills/tailwind',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/skills/tailwind.lazy').then((d) => d.Route),
)

const SkillsSvelteLazyRoute = SkillsSvelteLazyImport.update({
  path: '/skills/svelte',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/skills/svelte.lazy').then((d) => d.Route))

const SkillsReactLazyRoute = SkillsReactLazyImport.update({
  path: '/skills/react',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/skills/react.lazy').then((d) => d.Route))

const SkillsNodeLazyRoute = SkillsNodeLazyImport.update({
  path: '/skills/node',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/skills/node.lazy').then((d) => d.Route))

const SkillsNextLazyRoute = SkillsNextLazyImport.update({
  path: '/skills/next',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/skills/next.lazy').then((d) => d.Route))

const SkillsJsLazyRoute = SkillsJsLazyImport.update({
  path: '/skills/js',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/skills/js.lazy').then((d) => d.Route))

const SkillsHtmlLazyRoute = SkillsHtmlLazyImport.update({
  path: '/skills/html',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/skills/html.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/skills/html': {
      id: '/skills/html'
      path: '/skills/html'
      fullPath: '/skills/html'
      preLoaderRoute: typeof SkillsHtmlLazyImport
      parentRoute: typeof rootRoute
    }
    '/skills/js': {
      id: '/skills/js'
      path: '/skills/js'
      fullPath: '/skills/js'
      preLoaderRoute: typeof SkillsJsLazyImport
      parentRoute: typeof rootRoute
    }
    '/skills/next': {
      id: '/skills/next'
      path: '/skills/next'
      fullPath: '/skills/next'
      preLoaderRoute: typeof SkillsNextLazyImport
      parentRoute: typeof rootRoute
    }
    '/skills/node': {
      id: '/skills/node'
      path: '/skills/node'
      fullPath: '/skills/node'
      preLoaderRoute: typeof SkillsNodeLazyImport
      parentRoute: typeof rootRoute
    }
    '/skills/react': {
      id: '/skills/react'
      path: '/skills/react'
      fullPath: '/skills/react'
      preLoaderRoute: typeof SkillsReactLazyImport
      parentRoute: typeof rootRoute
    }
    '/skills/svelte': {
      id: '/skills/svelte'
      path: '/skills/svelte'
      fullPath: '/skills/svelte'
      preLoaderRoute: typeof SkillsSvelteLazyImport
      parentRoute: typeof rootRoute
    }
    '/skills/tailwind': {
      id: '/skills/tailwind'
      path: '/skills/tailwind'
      fullPath: '/skills/tailwind'
      preLoaderRoute: typeof SkillsTailwindLazyImport
      parentRoute: typeof rootRoute
    }
    '/skills/type': {
      id: '/skills/type'
      path: '/skills/type'
      fullPath: '/skills/type'
      preLoaderRoute: typeof SkillsTypeLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AboutLazyRoute,
  SkillsHtmlLazyRoute,
  SkillsJsLazyRoute,
  SkillsNextLazyRoute,
  SkillsNodeLazyRoute,
  SkillsReactLazyRoute,
  SkillsSvelteLazyRoute,
  SkillsTailwindLazyRoute,
  SkillsTypeLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/skills/html",
        "/skills/js",
        "/skills/next",
        "/skills/node",
        "/skills/react",
        "/skills/svelte",
        "/skills/tailwind",
        "/skills/type"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/skills/html": {
      "filePath": "skills/html.lazy.tsx"
    },
    "/skills/js": {
      "filePath": "skills/js.lazy.tsx"
    },
    "/skills/next": {
      "filePath": "skills/next.lazy.tsx"
    },
    "/skills/node": {
      "filePath": "skills/node.lazy.tsx"
    },
    "/skills/react": {
      "filePath": "skills/react.lazy.tsx"
    },
    "/skills/svelte": {
      "filePath": "skills/svelte.lazy.tsx"
    },
    "/skills/tailwind": {
      "filePath": "skills/tailwind.lazy.tsx"
    },
    "/skills/type": {
      "filePath": "skills/type.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
